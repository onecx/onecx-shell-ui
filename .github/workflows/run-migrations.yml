name: Run Migrations

on:
  pull_request:
    types: [labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  run-nx-migration:
    if: contains(github.event.label.name, 'nx-migration-required')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Fetch full history

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Extract package versions from PR
        id: extract-versions
        run: |
          set -e
          
          # Ensure we have the base branch
          git fetch origin ${{ github.event.pull_request.base.ref }}:refs/remotes/origin/${{ github.event.pull_request.base.ref }}
          
          # Get the merge base
          merge_base=$(git merge-base HEAD origin/${{ github.event.pull_request.base.ref }})
          echo "Merge base: $merge_base"
          
          # Find all changed package.json files
          changed_files=$(git diff --name-only $merge_base...HEAD | grep package.json || true)
          
          echo "Changed package.json files:"
          echo "$changed_files"
          
          # Extract NX package updates
          nx_packages=""
          if [[ -n "$changed_files" ]]; then
            for file in $changed_files; do
              if [[ -f "$file" ]]; then
                echo "Processing $file"
                # Look for @nx/ packages in the diff
                nx_updates=$(git diff $merge_base...HEAD "$file" | grep -E '^\+.*"@nx/|^\+.*"nx"' | sed 's/^+[[:space:]]*//' | sed 's/[",:]//g' | awk '{print $1 $2}' | sed 's/"//g' || true)
                if [[ -n "$nx_updates" ]]; then
                  echo "Found NX updates in $file: $nx_updates"
                  nx_packages="$nx_packages $nx_updates"
                fi
              fi
            done
          fi
          
          # Clean up the packages string
          nx_packages=$(echo "$nx_packages" | xargs)
          
          echo "nx_packages=$nx_packages" >> $GITHUB_OUTPUT
          echo "Final NX packages to migrate: '$nx_packages'"

      - name: Install dependencies
        run: npm ci

      - name: Run NX migrations
        if: steps.extract-versions.outputs.nx_packages != ''
        run: |
          set -e
          
          echo "Running migrations for packages: ${{ steps.extract-versions.outputs.nx_packages }}"
          
          # Run migrations for each NX package
          for pkg in ${{ steps.extract-versions.outputs.nx_packages }}; do
            if [[ -n "$pkg" && "$pkg" != " " ]]; then
              echo "Running migration for: $pkg"
              npx nx migrate "$pkg" || echo "Migration for $pkg failed or not needed"
            fi
          done
          
          # Install any new dependencies from migrations
          if [[ -f "package.json" ]]; then
            npm install
          fi
          
          # Run the actual migrations
          if [[ -f "migrations.json" ]]; then
            npx nx migrate --run-migrations || echo "No migrations to run"
            rm -f migrations.json
          fi

      - name: Commit migration changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "chore: run NX migrations

            Auto-generated by GitHub Actions after dependency updates."
            git push
            
            echo "Migration changes committed and pushed"
          else
            echo "No changes to commit from migrations"
          fi
          
          # Remove the label since we processed it
          gh pr edit ${{ github.event.pull_request.number }} --remove-label "nx-migration-required"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  run-onecx-migration:
    if: contains(github.event.label.name, 'onecx-migration-required')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Fetch full history

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Extract OneCX package versions from PR
        id: extract-onecx-versions
        run: |
          set -e
          
          # Ensure we have the base branch
          git fetch origin ${{ github.event.pull_request.base.ref }}:refs/remotes/origin/${{ github.event.pull_request.base.ref }}
          
          # Get the merge base
          merge_base=$(git merge-base HEAD origin/${{ github.event.pull_request.base.ref }})
          echo "Merge base: $merge_base"
          
          # Find all changed package.json files
          changed_files=$(git diff --name-only $merge_base...HEAD | grep package.json || true)
          
          echo "Changed package.json files:"
          echo "$changed_files"
          
          # Extract OneCX package updates
          onecx_packages=""
          if [[ -n "$changed_files" ]]; then
            for file in $changed_files; do
              if [[ -f "$file" ]]; then
                echo "Processing $file"
                # Look for @onecx/ packages in the diff
                onecx_updates=$(git diff $merge_base...HEAD "$file" | grep -E '^\+.*"@onecx/' | sed 's/^+[[:space:]]*//' | sed 's/[",:]//g' | awk '{print $1 $2}' | sed 's/"//g' || true)
                if [[ -n "$onecx_updates" ]]; then
                  echo "Found OneCX updates in $file: $onecx_updates"
                  onecx_packages="$onecx_packages $onecx_updates"
                fi
              fi
            done
          fi
          
          # Clean up the packages string
          onecx_packages=$(echo "$onecx_packages" | xargs)
          
          echo "onecx_packages=$onecx_packages" >> $GITHUB_OUTPUT
          echo "Final OneCX packages to migrate: '$onecx_packages'"

      - name: Install dependencies
        run: npm ci

      - name: Run OneCX migrations
        if: steps.extract-onecx-versions.outputs.onecx_packages != ''
        run: |
          set -e
          
          echo "Running migrations for packages: ${{ steps.extract-onecx-versions.outputs.onecx_packages }}"
          
          # Run migrations for each OneCX package
          for pkg in ${{ steps.extract-onecx-versions.outputs.onecx_packages }}; do
            if [[ -n "$pkg" && "$pkg" != " " ]]; then
              echo "Running migration for: $pkg"
              npx nx migrate "$pkg" || echo "Migration for $pkg failed or not needed"
            fi
          done
          
          # Install any new dependencies from migrations
          export NX_MIGRATE_SKIP_INSTALL=true
          if [[ -f "package.json" ]]; then
            npm install
          fi
          
          # Run the actual migrations if they exist
          if [[ -f "migrations.json" ]]; then
            npx nx migrate --run-migrations --if-exists || echo "No migrations to run"
            rm -f migrations.json
          fi

      - name: Commit migration changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "chore: run OneCX migrations

            Auto-generated by GitHub Actions after dependency updates."
            git push
            
            echo "Migration changes committed and pushed"
          else
            echo "No changes to commit from migrations"
          fi
          
          # Remove the label since we processed it
          gh pr edit ${{ github.event.pull_request.number }} --remove-label "onecx-migration-required"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}